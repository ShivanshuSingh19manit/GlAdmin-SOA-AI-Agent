{
  "message": "Commit message here",
  "content": "cGFja2FnZSBjb250cm9sbGVyCgppbXBvcnQgKAoJIkdMQURNSU4tQVBJL2RiYXNlIgoJIkdMQURNSU4tQVBJL2xvZ3MiCgkiR0xBRE1JTi1BUEkvdXRpbHMiCgkiZW5jb2RpbmcvanNvbiIKCSJlcnJvcnMiCgkiZm10IgoJImlvL2lvdXRpbCIKCSJsb2ciCgkibmV0L2h0dHAiCgkidGltZSIKCgkiZ2l0aHViLmNvbS9nb29nbGUvdXVpZCIKCSJnaXRodWIuY29tL3NpcnVwc2VuL2xvZ3J1cyIKKQoKZnVuYyBHbHVzcnVzcih3IGh0dHAuUmVzcG9uc2VXcml0ZXIsIHIgKmh0dHAuUmVxdWVzdCkgewoJc3RhcnQgOj0gdGltZS5Ob3coKQoJYm9keSwgZXJyIDo9IGlvdXRpbC5SZWFkQWxsKHIuQm9keSkKCWlmIGVyciAhPSBuaWwgewoJCWxvZ3MuTG9nLkVycm9yKCJlcnJvciBvY2N1cmVkOiAiLCBlcnIpCgkJbG9nLkZhdGFsKGVycikKCX0KCgl2YXIgcmVxX2RhdGEgbWFwW3N0cmluZ11pbnRlcmZhY2V7fQoJanNvbi5Vbm1hcnNoYWwoW11ieXRlKGJvZHkpLCAmcmVxX2RhdGEpCgoJYWN0aW9uIDo9IHJlcV9kYXRhWyJhY3Rpb24iXQoJdXBkYXRlZF9ieV9pZCA6PSByZXFfZGF0YVsidXBkYXRlZF9ieV9pZCJdCgoJaW5wdXQgOj0gbWFrZShtYXBbc3RyaW5nXWludGVyZmFjZXt9KQoJZm9yIGtleSwgdmFsdWUgOj0gcmFuZ2UgcmVxX2RhdGEgewoJCWlucHV0W2tleV0gPSB2YWx1ZQoJfQoJbXNnIDo9ICJzdWNjZXNzIgoJbnVtYmVycyA6PSBbXWludDY0ey0xfQoJcmVzcG9uc2UgOj0gbWFrZShtYXBbc3RyaW5nXWludGVyZmFjZXt9KQoJcmVzcG9uc2VbIkNvZGUiXSA9ICIiCglyZXNwb25zZVsiVXJsIl0gPSByLlJlcXVlc3RVUkkKCXJlc3BvbnNlWyJNZXRob2QiXSA9IGFjdGlvbgoJcmVzcG9uc2VbIklucHV0Il0gPSBpbnB1dAoJcmVzcG9uc2VbIk1zZyJdID0gbXNnCgoJZGVsZXRlKHJlcV9kYXRhLCAiYWN0aW9uIikKCWRlbGV0ZShyZXFfZGF0YSwgIkFLIikKCWRlbGV0ZShyZXFfZGF0YSwgIlZBTElEQVRJT05fS0VZIikKCWRlbGV0ZShyZXFfZGF0YSwgInVwZGF0ZWRfYnlfaWQiKQoKCXN0YXR1c19jb2RlIDo9ICI0MDAiCgoJaV9kIDo9IHV1aWQuTmV3KCkKCWxvZ19pZCA6PSBpX2QuU3RyaW5nKCkKCXNhbml0aXNlX2RhdGEsIF8gOj0gdXRpbHMuU2FuaXRpemVNYXAocmVxX2RhdGEpCgoJaWYgYWN0aW9uID09ICJyZWFkIiB7CgkJc3RhdHVzX2NvZGUsIG51bWJlcnMsIGVyciA9IHJlYWRnbHVzcnVzcihzYW5pdGlzZV9kYXRhLCBsb2dfaWQpCgl9IGVsc2UgewoJCW1zZyA9ICJyZXF1ZXN0IGFjdGlvbiBub3QgZm91bmQvaW5jb3JyZWN0IgoJfQoKCWlmIGVyciAhPSBuaWwgewoJCW1zZyA9IGZtdC5TcHJpbnRmKCIldiIsIGVycikKCX0KCglyZXNwb25zZVsiQ29kZSJdID0gc3RhdHVzX2NvZGUKCXJlc3BvbnNlWyJNc2ciXSA9IG1zZwoJcmVzcG9uc2VbIkdsdXNyX3Vzcl9pZCJdID0gbnVtYmVycwoKCWxvZ19yZXNwb25zZSwgZXJyIDo9IGpzb24uTWFyc2hhbChyZXNwb25zZSkKCWlmIGVyciAhPSBuaWwgewoJCWxvZ3MuTG9nLkVycm9yKGVycikKCX0KCWxvZ3MuTG9nLldpdGhGaWVsZHMobG9ncnVzLkZpZWxkc3sKCQkiQ29kZSI6ICAgICAgICAgIHN0YXR1c19jb2RlLAoJCSJyZXNwb25zZSI6ICAgICAgc3RyaW5nKGxvZ19yZXNwb25zZSksCgkJInVwZGF0ZWRfYnlfaWQiOiB1cGRhdGVkX2J5X2lkLAoJCSJUT1RBTF9USU1FIjogICAgdGltZS5TaW5jZShzdGFydCkuU2Vjb25kcygpICogMTAwMCwKCQkiU2l6ZSI6ICAgICAgICAgIGZsb2F0NjQobGVuKGxvZ19yZXNwb25zZSkpIC8gMTAyNCwKCQkiTE9HX0lEIjogICAgICAgIGxvZ19pZCwKCX0pLkluZm8obXNnKQoKCWpzb24uTmV3RW5jb2Rlcih3KS5FbmNvZGUocmVzcG9uc2UpCn0KCmZ1bmMgcmVhZGdsdXNydXNyKHJlcV9kYXRhIG1hcFtzdHJpbmddaW50ZXJmYWNle30sIGxvZ19pZCBzdHJpbmcpIChzdHJpbmcsIFtdaW50NjQsIGVycm9yKSB7CgkvLyBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZQoJZGIsIGVyciA6PSBkYmFzZS5HZXREQjEobG9nX2lkKQoJaWYgZXJyICE9IG5pbCB7CgkJcmV0dXJuICI1MDAiLCBbXWludDY0ey0xfSwgZXJyb3JzLk5ldygicHJvYmxlbSBpbiBkYXRhYmFzZSBjb25uZWN0aW9uIikKCX0KCgkvLyBBbGxvd2VkIGZpbHRlcnMKCWFsbG93ZWQgOj0gbWFwW3N0cmluZ11ib29sewoJCSJnbHVzcl91c3JfcGhfbW9iaWxlIjogdHJ1ZSwKCQkiZ2x1c3JfdXNyX2VtYWlsX2R1cCI6IHRydWUsCgl9CgoJLy8gVmFsaWRhdGlvbjogZW5zdXJlIGV4YWN0bHkgb25lIG9mIHRoZSBhbGxvd2VkIGZpbHRlcnMgaXMgcHJvdmlkZWQgKG5vbi1lbXB0eSksIGFuZCBubyB1bmV4cGVjdGVkIG5vbi1lbXB0eSBrZXlzCgl2YXIgcHJvdmlkZWRLZXkgc3RyaW5nCgl2YXIgcHJvdmlkZWRWYWwgaW50ZXJmYWNle30KCglmb3Iga2V5LCB2YWx1ZSA6PSByYW5nZSByZXFfZGF0YSB7CgkJLy8gc2tpcCBlbXB0eSB2YWx1ZXMKCQl0IDo9IGZtdC5TcHJpbnRmKCIlVCIsIHZhbHVlKQoJCWlmIHZhbHVlID09IG5pbCB8fCAodCA9PSAic3RyaW5nIiAmJiB2YWx1ZSA9PSAiIikgewoJCQljb250aW51ZQoJCX0KCgkJaWYgIWFsbG93ZWRba2V5XSB7CgkJCXJldHVybiAiNDAwIiwgW11pbnQ2NHstMX0sIGVycm9ycy5OZXcoIm1hbmRhdG9yeSBmaWVsZC9maWVsZHMgZG9lc24ndCBleGlzdCBpbiBqc29uIikKCQl9CgoJCWlmIHByb3ZpZGVkS2V5ICE9ICIiIHsKCQkJcmV0dXJuICI0MDAiLCBbXWludDY0ey0xfSwgZXJyb3JzLk5ldygicHJvdmlkZSBleGFjdGx5IG9uZSBvZiBnbHVzcl91c3JfcGhfbW9iaWxlIG9yIGdsdXNyX3Vzcl9lbWFpbF9kdXAiKQoJCX0KCQlwcm92aWRlZEtleSA9IGtleQoJCXByb3ZpZGVkVmFsID0gdmFsdWUKCX0KCglpZiBwcm92aWRlZEtleSA9PSAiIiB7CgkJcmV0dXJuICI0MDAiLCBbXWludDY0ey0xfSwgZXJyb3JzLk5ldygibWFuZGF0b3J5IGZpZWxkIG1pc3Npbmc6IHByb3ZpZGUgZ2x1c3JfdXNyX3BoX21vYmlsZSBvciBnbHVzcl91c3JfZW1haWxfZHVwIikKCX0KCgkvLyBCdWlsZCBTUUwgYmFzZWQgb24gcHJvdmlkZWQgZmlsdGVyCglzcWxTdGF0ZW1lbnQgOj0gInNlbGVjdCBnbHVzcl91c3JfaWQsZ2x1c3JfdXNyX2ZpcnN0bmFtZSxnbHVzcl91c3JfbGFzdG5hbWUsZ2x1c3JfdXNyX2NvbXBhbnluYW1lLGdsdXNyX3Vzcl9lbWFpbCxnbHVzcl91c3JfcGhfbW9iaWxlLGdsdXNyX3Vzcl9waF9jb3VudHJ5LGdsdXNyX3Vzcl9tb2JpbGVfY291bnRyeSxnbHVzcl91c3JfcGhfbnVtYmVyIGZyb20gZ2x1c3JfdXNyIHdoZXJlICIKCXNxbFN0YXRlbWVudDEgOj0gInNlbGVjdCBnbHVzcl91c3JfaWQgZnJvbSBnbHVzcl91c3Igd2hlcmUgIgoJdmFyIHBhcmFtcyBbXWludGVyZmFjZXt9CgoJc3dpdGNoIHByb3ZpZGVkS2V5IHsKCWNhc2UgImdsdXNyX3Vzcl9waF9tb2JpbGUiOgoJCXNxbFN0YXRlbWVudCArPSAiZ2x1c3JfdXNyX3BoX21vYmlsZSA9ICQxIgoJCXNxbFN0YXRlbWVudDEgKz0gImdsdXNyX3Vzcl9waF9tb2JpbGUgPSAkMSIKCQlwYXJhbXMgPSBhcHBlbmQocGFyYW1zLCBwcm92aWRlZFZhbCkKCWNhc2UgImdsdXNyX3Vzcl9lbWFpbF9kdXAiOgoJCXNxbFN0YXRlbWVudCArPSAiZ2x1c3JfdXNyX2VtYWlsX2R1cCA9IFVQUEVSKCQxKSIKCQlzcWxTdGF0ZW1lbnQxICs9ICJnbHVzcl91c3JfZW1haWxfZHVwID0gVVBQRVIoJDEpIgoJCXBhcmFtcyA9IGFwcGVuZChwYXJhbXMsIHByb3ZpZGVkVmFsKQoJZGVmYXVsdDoKCQlyZXR1cm4gIjQwMCIsIFtdaW50NjR7LTF9LCBlcnJvcnMuTmV3KCJtYW5kYXRvcnkgZmllbGQvZmllbGRzIGRvZXNuJ3QgZXhpc3QgaW4ganNvbiIpCgl9CgoJdmFyIG51bWJlcnMgW11pbnQ2NAoJcm93cywgZXJyIDo9IGRiYXNlLlF1ZXJ5RXhlY3V0ZXBhcmFtKHNxbFN0YXRlbWVudDEsIGRiLCBwYXJhbXMsIGxvZ19pZCkKCWlmIGVyciAhPSBuaWwgewoJCXJldHVybiAiNDAwIiwgW11pbnQ2NHstMX0sIGVycgoJfQoJZGVmZXIgcm93cy5DbG9zZSgpCgoJZm9yIHJvd3MuTmV4dCgpIHsKCQl2YXIgdXNyX2lkIGludDY0CgkJZXJyIDo9IHJvd3MuU2NhbigmdXNyX2lkKQoJCW51bWJlcnMgPSBhcHBlbmQobnVtYmVycywgdXNyX2lkKQoJCWlmIGVyciAhPSBuaWwgewoJCQlyZXR1cm4gIjQwMCIsIFtdaW50NjR7LTF9LCBlcnIKCQl9Cgl9CgoJaWYgZXJyID0gcm93cy5FcnIoKTsgZXJyICE9IG5pbCB7CgkJcmV0dXJuICI0MDAiLCBbXWludDY0ey0xfSwgZXJyCgl9CgoJc3RhdHVzLCBlcnIgOj0gZGJhc2UuRXhlY3V0ZVBhcmFtKHNxbFN0YXRlbWVudCwgZGIsIHBhcmFtcywgbG9nX2lkKQoJcmV0dXJuIHN0YXR1cywgbnVtYmVycywgZXJyCn0="
  "branch": "main"
}